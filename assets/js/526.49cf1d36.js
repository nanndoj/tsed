(window.webpackJsonp=window.webpackJsonp||[]).push([[526],{967:function(e,t,a){"use strict";a.r(t);var s=a(0),p=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"os3mediatype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#os3mediatype"}},[e._v("#")]),e._v(" OS3MediaType "),a("Badge",{attrs:{text:"Interface",type:"interface"}})],1),e._v(" "),a("section",{staticClass:"symbol-info"},[a("table",{staticClass:"is-full-width"},[a("tbody",[a("tr",[a("th",[e._v("Module")]),a("td",[a("div",{staticClass:"lang-typescript"},[a("span",{staticClass:"token keyword"},[e._v("import")]),e._v(" { OS3MediaType } "),a("span",{staticClass:"token keyword"},[e._v("from")]),e._v(" "),a("span",{staticClass:"token string"},[e._v('"@tsed/openspec"')])])])]),a("tr",[a("th",[e._v("Source")]),a("td",[a("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v6.18.0/packages/openspec/src/openspec3/OS3MediaType.ts#L0-L0"}},[e._v("/packages/openspec/src/openspec3/OS3MediaType.ts")])])])])])]),e._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("div",{staticClass:"language-typescript"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("interface")]),e._v(" OS3MediaType<"),a("a",{pre:!0,attrs:{href:"/api/mongoose/decorators/Schema.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Schema")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(" = ")]),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Schema.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Schema")])]),e._v("> "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    /**\n     * The schema defining the type used for the request body.\n     */\n    schema?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/mongoose/decorators/Schema.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Schema")])]),e._v(" | "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecRef.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecRef")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * "),a("a",{pre:!0,attrs:{href:"/api/schema/decorators/common/Example.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Example")])]),e._v(" of the media type. The example object SHOULD be in the correct format "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" specified by the media type. The example field is mutually exclusive of the examples field. Furthermore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" if referencing a schema which contains an example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the example value SHALL override the example provided by the schema.\n     */\n    example?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * Examples of the media type. Each example object SHOULD match the media type and specified schema if present. The examples field is mutually exclusive of the example field. Furthermore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" if referencing a schema which contains an example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the examples value SHALL override the example provided by the schema.\n     */\n    examples?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecHash.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecHash")])]),e._v("<"),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Example.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Example")])]),e._v(" | "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecRef.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecRef")])]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * A map between a property name and its encoding information. The key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" being the property name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" MUST exist in the schema "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" a property. The encoding object SHALL only apply to requestBody objects when the media type is `multipart` or `application/x-www-form-urlencoded`.\n     */\n    encoding?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecHash.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecHash")])]),e._v("<"),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Encoding.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Encoding")])]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])])])]),e._v(" "),a("h2",{attrs:{id:"members"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#members"}},[e._v("#")]),e._v(" Members")]),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("schema?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/mongoose/decorators/Schema.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Schema")])]),e._v(" | "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecRef.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecRef")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("The schema defining the type used for the request body.")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("example?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("Example of the media type. The example object SHOULD be in the correct format as specified by the media type. The example field is mutually exclusive of the examples field. Furthermore, if referencing a schema which contains an example, the example value SHALL override the example provided by the schema.")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("examples?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecHash.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecHash")])]),e._v("<"),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Example.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Example")])]),e._v(" | "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecRef.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecRef")])]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("Examples of the media type. Each example object SHOULD match the media type and specified schema if present. The examples field is mutually exclusive of the example field. Furthermore, if referencing a schema which contains an example, the examples value SHALL override the example provided by the schema.")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("encoding?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecHash.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecHash")])]),e._v("<"),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Encoding.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Encoding")])]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("A map between a property name and its encoding information. The key, being the property name, MUST exist in the schema as a property. The encoding object SHALL only apply to requestBody objects when the media type is "),a("code",[e._v("multipart")]),e._v(" or "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v(".")])])])}),[],!1,null,null,null);t.default=p.exports}}]);
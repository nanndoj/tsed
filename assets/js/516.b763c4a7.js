(window.webpackJsonp=window.webpackJsonp||[]).push([[516],{957:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"os3encoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#os3encoding"}},[e._v("#")]),e._v(" OS3Encoding "),a("Badge",{attrs:{text:"Interface",type:"interface"}})],1),e._v(" "),a("section",{staticClass:"symbol-info"},[a("table",{staticClass:"is-full-width"},[a("tbody",[a("tr",[a("th",[e._v("Module")]),a("td",[a("div",{staticClass:"lang-typescript"},[a("span",{staticClass:"token keyword"},[e._v("import")]),e._v(" { OS3Encoding } "),a("span",{staticClass:"token keyword"},[e._v("from")]),e._v(" "),a("span",{staticClass:"token string"},[e._v('"@tsed/openspec"')])])])]),a("tr",[a("th",[e._v("Source")]),a("td",[a("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v6.18.0/packages/openspec/src/openspec3/OS3Encoding.ts#L0-L0"}},[e._v("/packages/openspec/src/openspec3/OS3Encoding.ts")])])])])])]),e._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("div",{staticClass:"language-typescript"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("interface")]),e._v(" OS3Encoding "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    /**\n     * The `Content-"),a("a",{pre:!0,attrs:{href:"/api/core/interfaces/Type.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Type")])]),e._v("` for encoding a specific property. "),a("a",{pre:!0,attrs:{href:"/api/schema/decorators/common/Default.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Default")])]),e._v(" value depends on the property type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" for `"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("string")]),e._v("` with `format` being `binary` – `application/octet-stream`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" for other primitive types – `text/plain`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" for `object` - application/json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" for `array` – the default is defined based on the inner type. The value can be a specific media type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("e.g. `application/json`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" a wildcard media type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("e.g. `image/*`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" or a comma-separated list of the two types.\n     */\n    contentType?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * A map allowing additional information to be provided "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" for example `Content-Disposition`. `Content-"),a("a",{pre:!0,attrs:{href:"/api/core/interfaces/Type.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("Type")])]),e._v("` is described separately and SHALL be ignored in this section. This property SHALL be ignored if the request body media type is not a multipart.\n     */\n    headers?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecHash.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecHash")])]),e._v("<"),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Header.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Header")])]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * Describes how a specific property value will be serialized depending on its type. See "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Parameter Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" for details on the `"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterStyle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("` property. The behavior follows the same values "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" `query` parameters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" including default values. This property SHALL be ignored if the request body media type is not `application/x-www-form-urlencoded`.\n     */\n    style?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * When this is true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" property values of type `array` or `object` generate separate parameters for each value of the array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" or key-value-pair of the map. "),a("a",{pre:!0,attrs:{href:"/api/schema/decorators/common/For.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("For")])]),e._v(" other types of properties this property has no effect. When `"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterStyle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("` is `form`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the default value is true. "),a("a",{pre:!0,attrs:{href:"/api/schema/decorators/common/For.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("For")])]),e._v(" all other styles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the default value is `false`. This property SHALL be ignored if the request body media type is not `application/x-www-form-urlencoded`.\n     */\n    explode?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    /**\n     * Determines whether the parameter value SHOULD allow reserved characters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" defined by "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("RFC3986"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//tools.ietf.org/html/rfc3986#section-2.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" `"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("/?#"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("@!$&'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("*+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("=` to be included without percent-encoding. The default value is `false`. This property SHALL be ignored if the request body media type is not `application/x-www-form-urlencoded`.\n     */\n    allowReserved?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])])])]),e._v(" "),a("h2",{attrs:{id:"members"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#members"}},[e._v("#")]),e._v(" Members")]),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("contentType?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Content-Type")]),e._v(" for encoding a specific property. Default value depends on the property type: for "),a("code",[e._v("string")]),e._v(" with "),a("code",[e._v("format")]),e._v(" being "),a("code",[e._v("binary")]),e._v(" – "),a("code",[e._v("application/octet-stream")]),e._v("; for other primitive types – "),a("code",[e._v("text/plain")]),e._v("; for "),a("code",[e._v("object")]),e._v(" - application/json; for "),a("code",[e._v("array")]),e._v(" – the default is defined based on the inner type. The value can be a specific media type (e.g. "),a("code",[e._v("application/json")]),e._v("), a wildcard media type (e.g. "),a("code",[e._v("image/*")]),e._v("), or a comma-separated list of the two types.")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("headers?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("a",{pre:!0,attrs:{href:"/api/openspec/common/OpenSpecHash.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OpenSpecHash")])]),e._v("<"),a("a",{pre:!0,attrs:{href:"/api/openspec/openspec3/OS3Header.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[e._v("OS3Header")])]),e._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("A map allowing additional information to be provided as headers, for example "),a("code",[e._v("Content-Disposition")]),e._v(". "),a("code",[e._v("Content-Type")]),e._v(" is described separately and SHALL be ignored in this section. This property SHALL be ignored if the request body media type is not a multipart.")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("style?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("Describes how a specific property value will be serialized depending on its type. See "),a("a",{pre:!0,attrs:{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterObject",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parameter Object"),a("OutboundLink",{pre:!0})],1),e._v(" for details on the "),a("code",[e._v("[style](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterStyle)")]),e._v(" property. The behavior follows the same values as "),a("code",[e._v("query")]),e._v(" parameters, including default values. This property SHALL be ignored if the request body media type is not "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v(".")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("explode?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("When this is true, property values of type "),a("code",[e._v("array")]),e._v(" or "),a("code",[e._v("object")]),e._v(" generate separate parameters for each value of the array, or key-value-pair of the map. For other types of properties this property has no effect. When "),a("code",[e._v("[style](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#parameterStyle)")]),e._v(" is "),a("code",[e._v("form")]),e._v(", the default value is true. For all other styles, the default value is "),a("code",[e._v("false")]),e._v(". This property SHALL be ignored if the request body media type is not "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v(".")])]),a("hr"),e._v(" "),a("div",{pre:!0},[a("div",{pre:!0,attrs:{class:"method-overview"}},[a("div",{pre:!0,attrs:{class:"language-typescript"}},[a("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[e._v("allowReserved?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")])])])])]),e._v(" "),a("p",[e._v("Determines whether the parameter value SHOULD allow reserved characters, as defined by "),a("a",{pre:!0,attrs:{href:"https://tools.ietf.org/html/rfc3986#section-2.2",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC3986"),a("OutboundLink",{pre:!0})],1),e._v(" "),a("code",[e._v(":/?#[]@!$&'()*+,;=")]),e._v(" to be included without percent-encoding. The default value is "),a("code",[e._v("false")]),e._v(". This property SHALL be ignored if the request body media type is not "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v(".")])])])}),[],!1,null,null,null);t.default=r.exports}}]);